/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/UOfXl7bwzas
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Libre_Franklin } from 'next/font/google'
import { Archivo } from 'next/font/google'

libre_franklin({
  subsets: ['latin'],
  display: 'swap',
})

archivo({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/

/** Add border radius CSS variable to your global CSS:

:root {
  --radius: 1rem;
}
**/
import Link from "next/link";
import { Button } from "@/components/ui/button";

const chOne = () => {
  return (
    <div className="flex flex-col min-h-[100dvh]">
      <header className="px-4 lg:px-6 h-14 flex items-center">
        <Link className="flex items-center justify-center" href="#">
          <CodeIcon className="h-6 w-6" />
          <span className="sr-only">JavaScript Concepts</span>
        </Link>
        <nav className="ml-auto flex gap-4 sm:gap-6">
          <Link
            className="text-sm font-medium hover:underline underline-offset-4"
            href="#"
          >
            Const
          </Link>
          <Link
            className="text-sm font-medium hover:underline underline-offset-4"
            href="#"
          >
            Let
          </Link>
          <Link
            className="text-sm font-medium hover:underline underline-offset-4"
            href="#"
          >
            Var
          </Link>
          <Link
            className="text-sm font-medium hover:underline underline-offset-4"
            href="#"
          >
            Practice
          </Link>
        </nav>
      </header>
      <main className="flex-1">
        <section className="w-full py-12 md:py-24 lg:py-32 xl:py-48">
          <div className="container px-4 md:px-6">
            <div className="grid max-w-4xl mx-auto gap-6 lg:grid-cols-2 lg:gap-12">
              <div className="space-y-4">
                <h1 className="text-3xl font-bold tracking-tighter sm:text-4xl md:text-5xl lg:text-6xl/none">
                  Mastering JavaScript Variables
                </h1>
                <p className="text-gray-500 md:text-xl dark:text-gray-400">
                  Explore the differences between `const`, `let`, and `var` and
                  how they impact your code.
                </p>
              </div>
              <div className="flex justify-center">
                <img
                  alt="JavaScript Variables"
                  className="aspect-square overflow-hidden rounded-xl object-cover"
                  height="400"
                  src="/placeholder.svg"
                  width="400"
                />
              </div>
            </div>
          </div>
        </section>
        <section className="w-full py-12 md:py-24 lg:py-32 bg-gray-100 dark:bg-gray-800">
          <div className="container px-4 md:px-6">
            <div className="grid max-w-4xl mx-auto gap-6 lg:grid-cols-3 lg:gap-12">
              <div className="grid gap-4">
                <div className="bg-white rounded-lg p-6 shadow-sm dark:bg-gray-950">
                  <div className="flex items-center justify-center w-16 h-16 bg-[#55efc4] rounded-full text-3xl mb-4">
                    <LockIcon className="w-8 h-8" />
                  </div>
                  <h3 className="text-xl font-bold">const</h3>
                  <p className="text-gray-500 dark:text-gray-400">
                    Variables declared with `const` are block-scoped and cannot
                    be reassigned or redeclared.
                  </p>
                </div>
                <div className="bg-white rounded-lg p-6 shadow-sm dark:bg-gray-950">
                  <div className="flex items-center justify-center w-16 h-16 bg-[#ffeaa7] rounded-full text-3xl mb-4">
                    <LockOpenIcon className="w-8 h-8" />
                  </div>
                  <h3 className="text-xl font-bold">let</h3>
                  <p className="text-gray-500 dark:text-gray-400">
                    Variables declared with `let` are block-scoped and can be
                    reassigned, but cannot be redeclared in the same scope.
                  </p>
                </div>
              </div>
              <div className="grid gap-4">
                <div className="bg-white rounded-lg p-6 shadow-sm dark:bg-gray-950">
                  <div className="flex items-center justify-center w-16 h-16 bg-[#fdcb6e] rounded-full text-3xl mb-4">
                    <LockOpenIcon className="w-8 h-8" />
                  </div>
                  <h3 className="text-xl font-bold">var</h3>
                  <p className="text-gray-500 dark:text-gray-400">
                    Variables declared with `var` are function-scoped and can be
                    reassigned and redeclared within the same function.
                  </p>
                </div>
                <div className="bg-white rounded-lg p-6 shadow-sm dark:bg-gray-950">
                  <div className="flex items-center justify-center w-16 h-16 bg-[#74b9ff] rounded-full text-3xl mb-4">
                    <CodeIcon className="w-8 h-8" />
                  </div>
                  <h3 className="text-xl font-bold">Examples</h3>
                  <p className="text-gray-500 dark:text-gray-400">
                    Explore interactive code snippets to see the differences in
                    action.
                  </p>
                </div>
              </div>
              <div className="grid gap-4">
                <div className="bg-white rounded-lg p-6 shadow-sm dark:bg-gray-950">
                  <div className="flex items-center justify-center w-16 h-16 bg-[#81ecec] rounded-full text-3xl mb-4">
                    <ClipboardIcon className="w-8 h-8" />
                  </div>
                  <h3 className="text-xl font-bold">Practice</h3>
                  <p className="text-gray-500 dark:text-gray-400">
                    Test your understanding with interactive exercises and
                    quizzes.
                  </p>
                </div>
                <div className="bg-white rounded-lg p-6 shadow-sm dark:bg-gray-950">
                  <div className="flex items-center justify-center w-16 h-16 bg-[#a29bfe] rounded-full text-3xl mb-4">
                    <BookIcon className="w-8 h-8" />
                  </div>
                  <h3 className="text-xl font-bold">Resources</h3>
                  <p className="text-gray-500 dark:text-gray-400">
                    Explore additional resources to deepen your understanding.
                  </p>
                </div>
              </div>
            </div>
          </div>
        </section>
        <section className="w-full py-12 md:py-24 lg:py-32">
          <div className="container px-4 md:px-6">
            <div className="grid max-w-4xl mx-auto gap-6 lg:grid-cols-2 lg:gap-12">
              <div className="space-y-4">
                <h2 className="text-3xl font-bold tracking-tighter sm:text-4xl md:text-5xl lg:text-6xl/none">
                  Const, Let, and Var in Action
                </h2>
                <p className="text-gray-500 md:text-xl dark:text-gray-400">
                  Explore interactive examples to see the differences between
                  `const`, `let`, and `var` in action.
                </p>
              </div>
              <div className="grid gap-4">
                <div className="bg-white rounded-lg p-6 shadow-sm dark:bg-gray-950">
                  <h3 className="text-xl font-bold mb-2">Const</h3>
                  <div className="bg-gray-100 rounded-lg p-4 dark:bg-gray-800">
                    <pre className="text-sm font-mono text-gray-500 dark:text-gray-400">
                      <code>
                        const PI = 3.14; PI = 3.15; // Error: Assignment to
                        constant variable. const PI = 3.16; // Error: Identifier
                        'PI' has already been declared
                      </code>
                    </pre>
                  </div>
                </div>
                <div className="bg-white rounded-lg p-6 shadow-sm dark:bg-gray-950">
                  <h3 className="text-xl font-bold mb-2">Let</h3>
                  <div className="bg-gray-100 rounded-lg p-4 dark:bg-gray-800">
                    <pre className="text-sm font-mono text-gray-500 dark:text-gray-400">
                      <code>
                        let x = 5; x = 10; // Allowed: Reassignment let x = 15;
                        // Error: Identifier 'x' has already been declared
                      </code>
                    </pre>
                  </div>
                </div>
                <div className="bg-white rounded-lg p-6 shadow-sm dark:bg-gray-950">
                  <h3 className="text-xl font-bold mb-2">Var</h3>
                  <div className="bg-gray-100 rounded-lg p-4 dark:bg-gray-800">
                    <pre className="text-sm font-mono text-gray-500 dark:text-gray-400">
                      <code>
                        var y = 5; y = 10; // Allowed: Reassignment var y = 15;
                        // Allowed: Redeclaration
                      </code>
                    </pre>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </section>
        <section className="w-full py-12 md:py-24 lg:py-32 bg-gray-100 dark:bg-gray-800">
          <div className="container px-4 md:px-6">
            <div className="grid max-w-4xl mx-auto gap-6 lg:grid-cols-2 lg:gap-12">
              <div className="space-y-4">
                <h2 className="text-3xl font-bold tracking-tighter sm:text-4xl md:text-5xl lg:text-6xl/none">
                  Test Your Knowledge
                </h2>
                <p className="text-gray-500 md:text-xl dark:text-gray-400">
                  Practice what you've learned with interactive quizzes and
                  exercises.
                </p>
              </div>
              <div className="grid gap-4">
                <div className="bg-white rounded-lg p-6 shadow-sm dark:bg-gray-950">
                  <h3 className="text-xl font-bold mb-2">Quiz</h3>
                  <p className="text-gray-500 dark:text-gray-400 mb-4">
                    Test your understanding of `const`, `let`, and `var` with
                    this interactive quiz.
                  </p>
                  <Button>Take the Quiz</Button>
                </div>
                <div className="bg-white rounded-lg p-6 shadow-sm dark:bg-gray-950">
                  <h3 className="text-xl font-bold mb-2">Exercises</h3>
                  <p className="text-gray-500 dark:text-gray-400 mb-4">
                    Practice your skills with hands-on coding exercises.
                  </p>
                  <Button>Start Exercises</Button>
                </div>
              </div>
            </div>
          </div>
        </section>
        <section className="w-full py-12 md:py-24 lg:py-32 border-t">
          <div className="container px-4 md:px-6">
            <div className="grid max-w-4xl mx-auto gap-6 lg:grid-cols-2 lg:gap-12">
              <div className="space-y-4">
                <h2 className="text-3xl font-bold tracking-tighter sm:text-4xl md:text-5xl lg:text-6xl/none">
                  Dive Deeper
                </h2>
                <p className="text-gray-500 md:text-xl dark:text-gray-400">
                  Explore additional resources to further your understanding of
                  JavaScript variables.
                </p>
              </div>
              <div className="grid gap-4">
                <div className="bg-white rounded-lg p-6 shadow-sm dark:bg-gray-950">
                  <h3 className="text-xl font-bold mb-2">Documentation</h3>
                  <p className="text-gray-500 dark:text-gray-400 mb-4">
                    Read the official JavaScript documentation for a deeper dive
                    into `const`, `let`, and `var`.
                  </p>
                  <Link
                    className="inline-flex h-9 items-center justify-center rounded-md bg-gray-900 px-4 py-2 text-sm font-medium text-gray-50 shadow transition-colors hover:bg-gray-900/90 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-gray-950 disabled:pointer-events-none disabled:opacity-50 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90 dark:focus-visible:ring-gray-300"
                    href="#"
                  >
                    Read Documentation
                  </Link>
                </div>
                <div className="bg-white rounded-lg p-6 shadow-sm dark:bg-gray-950">
                  <h3 className="text-xl font-bold mb-2">Video Tutorials</h3>
                  <p className="text-gray-500 dark:text-gray-400 mb-4">
                    Watch video tutorials to reinforce your understanding of
                    these JavaScript concepts.
                  </p>
                  <Link
                    className="inline-flex h-9 items-center justify-center rounded-md border border-gray-200 bg-white px-4 py-2 text-sm font-medium shadow-sm transition-colors hover:bg-gray-100 hover:text-gray-900 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-gray-950 disabled:pointer-events-none disabled:opacity-50 dark:border-gray-800 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50 dark:focus-visible:ring-gray-300 dark:border-gray-800"
                    href="#"
                  >
                    Watch Tutorials
                  </Link>
                </div>
              </div>
            </div>
          </div>
        </section>
      </main>
      <footer className="flex flex-col gap-2 sm:flex-row py-6 w-full shrink-0 items-center px-4 md:px-6 border-t">
        <p className="text-xs text-gray-500 dark:text-gray-400">
          © 2024 JavaScript Concepts. All rights reserved.
        </p>
        <nav className="sm:ml-auto flex gap-4 sm:gap-6">
          <Link className="text-xs hover:underline underline-offset-4" href="#">
            Terms of Service
          </Link>
          <Link className="text-xs hover:underline underline-offset-4" href="#">
            Privacy
          </Link>
        </nav>
      </footer>
    </div>
  );
};

export default chOne;

function BookIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H20v20H6.5a2.5 2.5 0 0 1 0-5H20" />
    </svg>
  );
}

function ClipboardIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <rect width="8" height="4" x="8" y="2" rx="1" ry="1" />
      <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2" />
    </svg>
  );
}

function CodeIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <polyline points="16 18 22 12 16 6" />
      <polyline points="8 6 2 12 8 18" />
    </svg>
  );
}

function LockIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <rect width="18" height="11" x="3" y="11" rx="2" ry="2" />
      <path d="M7 11V7a5 5 0 0 1 10 0v4" />
    </svg>
  );
}

function LockOpenIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <rect width="18" height="11" x="3" y="11" rx="2" ry="2" />
      <path d="M7 11V7a5 5 0 0 1 9.9-1" />
    </svg>
  );
}
